{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Traffic_Map\\\\front\\\\src\\\\Components\\\\Result.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Result extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      htmlContent: '' // Initialize state to store the HTML content\n\n    };\n  }\n\n  componentDidMount() {\n    // Fetch the internal HTML file content when the component mounts\n    fetch('../mymap.html') // Update the path as per your project structure\n    .then(response => response.text()).then(html => {\n      this.setState({\n        htmlContent: html\n      }); // Set the fetched HTML content to state\n    }).catch(error => {\n      console.error('Error fetching HTML file:', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"const \", htmlContent, \" = this.state; return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: htmlContent\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","axios","Result","constructor","props","state","htmlContent","componentDidMount","fetch","then","response","text","html","setState","catch","error","console","render","__html"],"sources":["C:/xampp/htdocs/Traffic_Map/front/src/Components/Result.component.js"],"sourcesContent":["import React, { Component } from 'react' ;\r\nimport axios from 'axios';\r\n\r\nexport default class Result extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          htmlContent: '' // Initialize state to store the HTML content\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        // Fetch the internal HTML file content when the component mounts\r\n        fetch('../mymap.html') // Update the path as per your project structure\r\n          .then(response => response.text())\r\n          .then(html => {\r\n            this.setState({ htmlContent: html }); // Set the fetched HTML content to state\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching HTML file:', error);\r\n          });\r\n      }\r\n\r\n\r\n       \r\n    render() {\r\n        return(\r\n            <div>\r\n                const { htmlContent } = this.state;\r\n\r\n                return (\r\n                <div className=\"App\">\r\n                    {/* Render the fetched HTML content using dangerouslySetInnerHTML */}\r\n                    <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n                </div>\r\n                );\r\n                \r\n         \r\n            </div>\r\n       \r\n            )     \r\n        \r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;EAE1CG,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,WAAW,EAAE,EADF,CACK;;IADL,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAClB;IACAC,KAAK,CAAC,eAAD,CAAL,CAAuB;IAAvB,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZ,KAAKC,QAAL,CAAc;QAAEP,WAAW,EAAEM;MAAf,CAAd,EADY,CAC0B;IACvC,CAJH,EAKGE,KALH,CAKSC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;IACD,CAPH;EAQD;;EAIHE,MAAM,GAAG;IACL,oBACI;MAAA,qBACYX,WADZ,0CAII;QAAK,SAAS,EAAC,KAAf;QAAA,uBAEI;UAAK,uBAAuB,EAAE;YAAEY,MAAM,EAAEZ;UAAV;QAA9B;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAgBH;;AAxCyC"},"metadata":{},"sourceType":"module"}